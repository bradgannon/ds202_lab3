"hwy"
mpg[sort('hwy', decreasing = TRUE)]
data <- mpg[sort("hwy", decreasing = TRUE)]
data
head(data)
head(mpg)
data <- mpg[order(-mpg$hwy)]
data <- data.frame(mpg)
sort(data['hwy'], decreasing = TRUE)
head(data)
data <- data[order(-data$'hwy')]
data <- mpg[order(-mpg$'hwy')]
sort(mpg['hwy'], decreasing = TRUE)
mileage = mpg['hwy']
mileage
sort(mileage, decreasing = TRUE)
rm(data)
data
data[order(-data$hwy),]
data2 <- data[order(-data$hwy),]
data2 <- mpg[order(-mpg$hwy),]
data2
data <- mpg[order(-mpg$hwy)]
data <- mpg[order(-mpg$hwy),]
head(data, 3)
num <- length(grep("compact", mpg))
num
data <- mpg[order(mpg$class),]
data
data(head, 234)
head(data, 234)
class <- mpg[class]
class <- mpg['class']
class
table('compact')
library(plyr)
count(mpg, 'compact')
count(class, 'compact')
count(class, "compact")
head(mpg)
num <- length("compact", mpg)
num <- length(grep("compact", mpg))
num
class <- mpg['calss']
class <- mpg['class']
class
head(mpg, class = "compact")
head(mpg, class == "compact")
head(mpg, class = "compact")
head(data)
head(mpg, class = "sedan")
test <- mpg['class'] == "compact"
test
sort(test, decesding = TRUE)
sort(test, decreasing = TRUE)
length(grep(TRUE, test))
test <- mpg['class'] == "compact"
test
numCompact <- length(grep(TRUE, test))
numCompact
head(mpg)
ggplot(mpg, aes(x=hwy, y=cty)) + geom_point()
ggplot(mpg, aes(x=hwy, y=cty)) + geom_point() + ggtitle("Hwy vs. City MPG")
ggplot(mpg, aes(x=hwy, y=cty)) + geom_point() + ggtitle("Hwy vs. City MPG") + theme(plot.title = element_text(hjust = 0.5))
plot <- ggplot(mpg, aes(x=hwy, y=cty)) + geom_point() + geom_smooth(method=lm)
plot <- plot + ggtitle("Hwy vs. City MPG") + theme(plot.title = element_text(hjust = 0.5))
plot
bar <- ggplot(mpg, aes(x=year, y=cty, y=hwy))
bar <- ggplot(mpg, aes(x=year, y=cty + hwy))
bar
bar <- ggplot(mpg, aes(x=year, y=cty))
bar
bar <- ggplot(mpg, aes(x=year, y=cty + hwy))
bar <- ggplot(mpg, aes(x=year, y=cty + hwy)) + geom_bar()
bar
bar <- ggplot(mpg, aes(x=year, y=cty)) + geom_bar()
bar
bar <- ggplot(mpg, aes(x=year, y=cty)) + geom_bar(stat="identity")
bar
bar1999 <- ggplot(mpg, aes(x=(year == 1999), y = (cty + hwy))) + geom_bar(stat="identity")
bar1999
bar
data <- mpg['year']
year <- mpg['year']
mpg <- mpg['cty'] + mpg['hwy']
mpg
head(mpg)
library(ggplot2)
head(mpg)
rm(mpg)
head(mpg)
year <- mpg['year']
year
cty <- mpg['cty']
hwy <- mpg['hwy']
bar1 <- ggplot(mpg, aes(x=year, y=cty))
bar1
bar1 <- bar1 + geom_bar()
bar1
bar1 <- ggplot(mpg, aes(x=year, y=cty)) + geom_bar(stat="indepent")
bar1 <- ggplot(mpg, aes(x=year, y=cty)) + geom_bar(stat="identity")
bar1
rm(bar1)
rm(cty)
rm(hwy)
rm(year)
cty <- ggplot2(mpg, aes(x=mpg['year'], y=mpg['cty'])) + geom_point()
cty <- ggplot(mpg, aes(x=mpg['year'], y=mpg['cty'])) + geom_point()
cty
cty <- ggplot(mpg, aes(x=year, y=cty)) + geom_point()
cty
cty <- ggplot(mpg, aes(x=year, y=cty)) + geom_bar(stat="identity")
cty
cty <- ggplot(mpg, aes(x=year, y=cty)) + geom_bar(stat="identity", width=0.5)
cty
cty <- ggplot(mpg, aes(x=year, y=cty, fill=year)) + geom_bar(stat="identity", width=0.5) + theme_minimal()
cty
cty <- cty + ggtitle("City MPG - 1999 vs. 2008") + theme(plot.title = element_text(hjust = 0.5))
cty
head(mpg)
mpg <- mpg[order(mpg$year),]
head(mpg)
length(grep(1999, hwy['year']))
length(grep(1999, mpg['year']))
count(mpg['year'] == 1999)
year <- mpg['year']
year
year <- year == 1999
year
mpg[1]
mpg2
mpg[2:4]
mpg[1][2]
old <- mpg[1:117,]
old
oldCtyMPG <- old['cty']
oldCtyMPG
oldCtyMPG <- mean(oldCtyMPG)
oldCtyMPG <- mean(df['cty'])
library(ggplot2)
rm(mpg)
library(ggplot2)
mpg <- mpg[order(mpg$year),] # ordering by 1999 first, then 2008. The data is divided evenly between the years
oldModels <- mpg[1:117,] # all 1999 models are in this set
newModels <- mpg[118:234,] # all 2008 models are in this set
head(oldModels, 3)
head(newModels, 3)
sum(oldModels['cty'])
sum(oldModels['hwy'])
oldAvgMPG <- sum(oldModels['cty']) + sum(oldModels['hwy'])
length(oldModels)
oldAvgMpg <- oldAvgMpg / 117
oldAvgMPG <- oldAvgMPG / 117.0
oldAvgMPG
source('~/.active-rstudio-document', echo=TRUE)
x <- c('cat', 'cat','cat', 'dog', 'cat')
str(x)
y <- factor(x)
y
str(y)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/Users/bradg/Downloads/Rdemo_190205 (1).R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
install.packages("devtools")
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
table(fbi)
fbi$Year <- factor(fbi$Year)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb7.R', echo=TRUE)
barplot(table(type))
barplot(table(type1))
barplot(table(type1))
boxplot(fbi$Count ~ type)
lvl
boxplot(fbi$Count ~ type)
barplot(table(type1))
boxplot(fbi$Count ~ type)
lvl
lvl2 <- c(lvl[5], lvl[-5])
lvl2 <- c(lvl[5], lvl[-5])
lvl2
type2 <- factor(type, levels=lvl2)
type2
boxplot(fbi$Count ~ type2)
table(type3)
type3 <- type
levels(type3) <- c('assault', 'burglary', 'theft', 'legacy rape', 'motor theft', 'murder', 'rape', 'robbery')
table(type3)
boxplot(fbi$Count ~ type3)
library(ggplot2)
choco <- read.csv("https://xdaiisu.github.io/ds202materials/hwlabs/choco.csv")
head(choco)
ratings <- choco$Rating\
ratings <- choco$Rating
head(ratings)
hist(ratings)
pct <- choco$Cocoa.Pct
head(pct)
plot(ratings, pct, main="Ratings vs. Cocoa Pct.", xlab="Rating", ylab="% Cocoa")
plot(pct, ratings, main="Ratings vs. Cocoa Pct.", xlab="% Cocoa", ylab="Rating")
plot(ratings, pct, main="Ratings vs. Cocoa Pct.", xlab="Rating", ylab="% Cocoa")
plot(pct, ratings, main="Ratings vs. Cocoa Pct.", xlab="% Cocoa", ylab="Rating")
shape(choco)
dim(choco)
year <- choco$Review.Date
head(year)
barplot(year, main="Ratings per Year", xlab="Year")\
barplot(year, main="Ratings per Year", xlab="Year")
head(year, 1852)
barplot(year, main="Car Distribution", horiz=TRUE, names.arg=c("2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016"))
barplot(year)
geom_bar(data=year)
geom_bar(data=choco[Review.date])
geom_bar(data=choco['Review.date'])
geom_bar(data=choco["Review.date"])
rm(year)
year
geom_bar(data=choco$Review.Date)
barplot(choco$Review.Date)
year <- choco$Review.Date
barplot(year, horiz=TRUE)
barplot(year, beside=FALSE)
clear
barplot(year)
head(choco)
place <- choco$Company.Location
barplot(place)
france <- place[place == "France"]
france
barplot(france)
sum(france)
france <- length(france)
france
usa <- length(place[place == "USA"])
usa
head(place, 100)
usa <- length(place[place == "U.S.A."])
usa
canada <- length(place[place == "Canada"])
canada
locations <- c(usa, france, canada)
locations
barplot(locations)
barplot(locations, main="Ratings by Location", names.arg="USA", "France", "Canada")
barplot(locations, main="Ratings by Location", names.arg=c("USA", "France", "Canada"))
barplot(locations, main="Ratings by Location", names.arg=c("USA", "France", "Canada"), yim=c(0, 1000))
barplot(locations, main="Ratings by Location", names.arg=c("USA", "France", "Canada"), ylim=c(0, 1000))
barplot(locations, main="Ratings by Location", names.arg=c("USA", "France", "Canada"))
barplot(locations, main="Ratings by Location", names.arg=c("USA", "France", "Canada"), ylim = c(0, 1000))
usa <- choco[Company.Location == "U.S.A."]
usa <- choco["Company.Location"] == "U.S.A."
head(usa)
usa <- split(choco, choco$Company.Location)
head(usa)
usa <- split(choco, choco$Company.Location == "U.S.A.")
head(usa)
usaRating <- usa$Rating
head(usaRating)
rm(usaRating)
locations <- split(choco, choco$Company.Location)
head(locations)
locations$U.S.A.
usa <- locations$U.S.A.
france <- locations$France
canada <- locations$Canada
groups <- c(usa, france, canada)
groups
usaRatings <- usa$Rating
usaRatings
franceRatings <- france$Rating
canadaRatings <- canada$Rating
usaRatings
usaRatings <- mean(usaRatings)
usaRatings
franceRatings <- mean(franceRatings)
franceRatings
canadaRatings <- mean(canadaRatings)
canadaRatings
rm(usaRatings)
rm(franceRatings)
rm(canadaRatings)
par(mfrow=c(2,2))
countries <- c("USA", "France", "Canada")
groupRatings <- c(usaRatings, franceRatings, canadaRatings)
usaRatings <- usa$Rating
franceRatings <- france$Rating
canadaRatings <- canada$Rating
groupRatings <- c(usaRatings, franceRatings, canadaRatings)
plot(countries, groupRatings)
usaMean <- mean(usaRatings)
franceMean <- mean(franceRatings)
canadaMean <- mean(canadaRatings)
means <- c(usaMean, franceMean, canadaMean)
barplot(means, main="Average Rating by Country", horiz=TRUE, names.arg=c("USA", "France", "Canada"))
barplot(means, main="Average Rating by Country", names.arg=c("Canada", "France", "USA"), ylim = c(0, 4), ylab = "Avg Rating (out of 5.0)")
par(mfrow=c(1,1))
barplot(means, main="Average Rating by Country", names.arg=c("Canada", "France", "USA"), ylim = c(0, 4), ylab = "Avg Rating (out of 5.0)")
text(2, 6, canadaMean)
my_bar = barplot(means, main="Average Rating by Country", names.arg=c("Canada", "France", "USA"), ylim = c(0, 4), ylab = "Avg Rating (out of 5.0)")
text(my_bar, groupRatings + 0.3, paste(groupRatings), cex=1)
text(my_bar["Canada"], canadaMean + 0.2, paste(canadaMean), cex=1)
my_bar
rm(my_bar)
my_bar = barplot(means, main="Average Rating by Country", names.arg=c("Canada", "France", "USA"), ylim = c(0, 4), ylab = "Avg Rating (out of 5.0)")
text(my_bar, 2.5, labels=means)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb12.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb12.R', echo=TRUE)
source('C:/bgannon/Spring2019/DS202/Lectures/Feb12.R', echo=TRUE)
head(fbiwide, 100)
head(fbiwide)
dim(fbi)
ggplot(data=fbiwide, aes(x=Burglary, y=Murder)) + geom_point()
libary(ggplot2)
head(fbiwide)
ggplot(data=fbiwide, aes(x=Burglary, y=Murder)) + geom_point()
library("ggplot2")
head(fbiwide)
ggplot(data=fbiwide, aes(x=Burglary, y=Murder)) + geom_point()
ggplot(data=fbiwide, aes(x=Year, y=Murder)) + geom_point()
ggplot(data=fbiwide, aes(x=table(Year), y=Murder)) + geom_point()
ggplot(data=fbiwide, aes(x=Year, y=Murder)) + geom_point()
ggplot(data=fbiwide, aes(x=sum(Year), y=Murder)) + geom_point()
ggplot(data=fbiwide, aes(x=Year, y=sum(Murder)) + geom_point()
ggplot(data=fbiwide, aes(x=Year, y=sum(Murder))) + geom_point()
ggplot(data=fbiwide, aes(x=Year, y=sum(Murder))) + geom_point()
data(tips, package="reshape2")
head(tips)
?tips
??tips
length(tips)
dim(tips)
width(tips)
nrow(tips)
numParty <- nrow(tips)
numParty
str(tips)
sapply(tips)
class(tips)
sapply(tips, class(tips))
str(tips)
head(tips)
day <- tips$day
day
day <- factor(day, levels=c("Thursday", "Friday", "Saturday", "Sunday"))
day
rm(day)
day
tips$day <- factor(tips$day, levels = c("Mon", "Tues", "Wed", "Thur", "Fri", "Sat", "Sun"))
day <- tips[order(tips$day),]
day
day <- tips[order(tips$day), "day"]
dau
day
tips$sex <- factor(tips$sex, levels = c("Female", "Male"))
female <- tips[order(tips$sex),]
female
rm(female)
female <- subset(tips, sex="Female")
female
female <- tips[tips$sex == 'Female']
female <- tips[(tips$sex == 'Female'),]
female
female5 <- tips[(tips$size >= 5),]
female5
female5 <- female[(female$size >= 5),]
female5
library(ggplot2)
ggplot2
load(ggplot2)
library("ggplot2")
ggplot2(tips, aes(x=tip, y=total_bill)) + geom_point()
ggplot(tips, aes(x=tip, y=total_bill)) + geom_point()
ggplot(tips, aes(x=tip, y=total_bill)) + geom_point() + stat_ellipse()
ggtitle("Tip Amount vs. Total Bill")
ggplot(tips, aes(x=tip, y=total_bill)) + geom_point() + stat_ellipse() + ggtitle("Tip Amount vs. Total Bill")
ggplot(tips, aes(x=tip, y=total_bill)) + geom_point() + stat_ellipse() + ggtitle("Tip Amount vs. Total Bill") + theme(plot.title=element_text(hjust=0.5))
ggplot(tips, aes(x=tip, y=total_bill)) + geom_point() + geom_density2d()
ggplot(tips, aes(x=tip, y=total_bill)) + geom_point() + stat_ellipse(type="norm")
tips$tiprate <- data$tip / data$total_bill
tips$tiprate <- tips$tip / tips$total_bill
tips
mean(tips$tiprate)
tips$time <- factor(tips$time, levels = c("Lunch", "Dinner"))
tips
tips$time <- factor(tips$time, levels = c("Lunch", "Dinner"))
temp <- tips[order(tips$time),]
temp
p <- ggplot(temp, aes(x=time, y=tiprate)) + geom_boxplot()
p
p <- ggplot(temp, aes(x=time, y=tiprate)) + geom_boxplot(outlier.color="red", outlier.shape=8, outlier.size=2)
p
p <- p + ggtitle("Time of Day vs. Tip Rate") + theme(plot.title=element_text(hjust=0.5))
p
tips$sex <- factor(tips$sex, levels=c("Female", "Male"))
f_non_smoke <- tips[(tips$sex == 'Female'),]
rm(f_non_smoke)
female <- tips[(tips$sex == 'Female'),]
f_noSmoke <- female[(female$smoker == 'No'),]
f_noSmoke
f_yesSmoke <- female[(female$smoker == 'Yes'),]
f_yesSmoke
male <- tips[(tips$sex == 'Male'),]
m_noSmoke <- male[(male$smoker == "No"),]
m_noSmoke
m_yesSmoke <- male[(male$smoker == "Yes"),]
m_yesSmoke
f_no <- ggplot(f_noSmoke, aes(x=tip, y=total_bill)) + geom_point()
f_no
f_no <- ggplot(f_noSmoke, aes(x=tip, y=total_bill)) + geom_point() + geom_smooth(method=lm)
f_no
f_no <- ggplot(f_noSmoke, aes(x=tip, y=total_bill)) + geom_point() + geom_smooth()
f_no
f_yes <- ggplot(f_yesSmoke, aes(x=tip, y=total_bill)) + geom_point() + geom_smooth()
f_yes
m_no <- ggplot(m_noSmoke, aes(x=tip, y=total_bill)) + geom_point() + geom_smooth()
m_no
m_yes <- ggplot(m_yesSmoke, aes(x=tip, y=total_bill)) + geom_point() + geom_smooth()
m_yes
m_yes <- ggplot(m_yesSmoke, aes(x=tip, y=total_bill)) + geom_point() + geom_smooth(method=lm, se=FALSE)
m_yes
m_yes <- ggplot(m_yesSmoke, aes(x=tip, y=total_bill)) + geom_point() + geom_smooth()
m_yes
plots <- ggarrange(m_no, m_yes, f_no, f_yes, labels=c("Male Non-Smoker", "Male Smoker", "Female Non-Smoker", "Female Smoker"), ncol=2,nrow=2)
library("ggpubr")
install.packages("ggpubr")
library("ggpubr")
plots <- ggarrange(m_no, m_yes, f_no, f_yes, labels=c("Male Non-Smoker", "Male Smoker", "Female Non-Smoker", "Female Smoker"), ncol=2,nrow=2)
plots
plots <- ggarrange(m_no, m_yes, f_no, f_yes, labels=c("Male Non-Smoker", "Male Smoker", "Female Non-Smoker", "Female Smoker"), font.label=list(size = 10, color="black"), ncol=2,nrow=2)
plots
head(tips, 5)
p <- ggplot(tips, aes(x=day,y=sex)) + geom_bar(stat="identity")
p
p <- ggplot(tips, aes(x=day,y=sex,fill=supp)) + geom_bar(stat="identity", position=poisition_dodge())
p <- ggplot(tips, aes(x=day,y=sex,fill=supp)) + geom_bar(stat="identity", position=position_dodge())
p
p <- ggplot(tips, aes(x=day,y=sex,fill=sex)) + geom_bar(stat="identity", position=position_dodge())
p
p1 <- gpplot(tips, aes(x=day, y=tips$sex == "Female")) + geom_bar(stat="identity")
p1 <- gpplot(tips, aes(x=day, y=tips$sex == "Female")) + geom_bar(stat="identity")
rm(p)
rm(p1)
male
female
fT <- female[(female$day == "Thursday"),]
fT <- female[(female$day == "Friday"),]
fT <- female[(female$day == "Thursday"),]
fF <- female[(female$day == "Friday"),]
fF <- female[(female$day == "Saturday"),]
fT <- female[(female$day == "Thur"),]
fF <- female[(female$day == "Fri"),]
fSa <- female[(female$day == "Sat"),]
fSu <- female[(female$day == "Sun"),]
mT <- male[(male$day == "Thurs"),]
mF <- male[(male$day == "Fri"),]
mSa <- male[(male$day == "Sat"),]
mSu <- male[(male$day == "Sun"),]
nRows(fT)
nrows(fT)
fT
fF
fSa
dim(fT)
length(fT)
nrows(fT)
nrow(fT)
yvals <- c(nrow(fT),nrow(mT),nrow(fF),nrow(mF),nrow(fSa),nrow(mSa),nrow(fSu),nrow(mSu))
yvals
p <- ggplot(tips, aes(x=day,y=yvals,fill=sex)) + geom_bar(stat="identity", position=position_dodge())
p
xvals <- c("female_Thurs","male_Thurs","female_Fri","male_Fri","female_Sat","male_Sat","female_Sun","male_Sun")
p <- ggplot(tips, aes(x=xvals,y=yvals,fill=sex)) + geom_bar(stat="identity", position=position_dodge())
p
p <- ggplot(tips, aes(x=xvals,y=yvals) + geom_bar(stat="identity", position=position_dodge())
p <- ggplot(tips, aes(x=xvals,y=yvals) + geom_bar(stat="identity", position=position_dodge())
0
p <- ggplot(tips, aes(x=xvals, y=yvals)) + geom_bar(stat="identity")
p
toPlot <- data.frame("Days" = xvals, "Values" = yvals)
toPlot
ggplot(toPlot, aes(Days, Values)) + geom_bar(stat="identity")
toPlot <- data.frame("Days" = xvals, "Number" = yvals)
ggplot(toPlot, aes(Days, Values)) + geom_bar(stat="identity")
ggplot(toPlot, aes(Days, Numbers)) + geom_bar(stat="identity")
ggplot(toPlot, aes(Days, Number)) + geom_bar(stat="identity")
positions <- c("")
positions <- c"female_Thurs","male_Thurs","female_Fri","male_Fri","female_Sat","male_Sat","female_Sun","male_Sun")
positions <- c("female_Thurs","male_Thurs","female_Fri","male_Fri","female_Sat","male_Sat","female_Sun","male_Sun")
ggplot(toPlot, aes(Days, Number)) + geom_bar(stat="identity") + scale_x_discrete(limits=positions)
data(happy, package="productplots")
HAPPY <- readRDS("HAPPY.rds")
install.packages("productplots")
data(happy, package="productplots")
head(happy)
HAPPY <- readRDS("HAPPY.rds")
getwd()
setwd("C:/bgannon/DS202/Lab3")
setwd("C:/bgannon/Spring2019/DS202/Lab3")
HAPPY <- readRDS("HAPPY.rds")
head(HAPPY)
getwd()
